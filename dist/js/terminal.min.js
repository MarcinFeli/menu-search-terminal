"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var r;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(r="Object"===(r=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _iterableToArrayLimit(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){l=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function ownKeys(e,t){var r,n=Object.keys(e);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(e),t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)),n}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach(function(t){_defineProperty(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _defineProperty(t,e,r){return(e=_toPropertyKey(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"==_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!=_typeof(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!=_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}var CUSTOM_COMMANDS={hello:{msg:"Hello :)"}},Terminal=function(){function t(){var e=this;_classCallCheck(this,t),this.history=[],this.currentIndex=-1,this.commands=_objectSpread({clear:function(){return e.clear()},help:function(){return e.help()},quote:function(){return e.fetchQuote()},double:function(t){return e.double(t)}},CUSTOM_COMMANDS),this.input=document.getElementById("terminal-input"),this.output=document.getElementById("terminal-output"),this.input.addEventListener("keydown",this.handleInput.bind(this)),this.input.focus(),this.outputMessage("Last login: Tue, 30 Jan 2024 10:43:20 GMT")}return _createClass(t,[{key:"handleInput",value:function(t){var e;"Enter"===t.key?(e=this.input.value.trim(),this.history.push(e),this.currentIndex=this.history.length,this.processCommand(e),this.input.value=""):"ArrowUp"===t.key?this.navigateHistory("up"):"ArrowDown"===t.key&&this.navigateHistory("down")}},{key:"navigateHistory",value:function(t){"up"===t&&0<this.currentIndex?this.currentIndex--:"down"===t&&this.currentIndex<this.history.length-1&&this.currentIndex++,this.input.value=this.history[this.currentIndex]||""}},{key:"processCommand",value:function(t){var t=_slicedToArray(t.split(" "),2),e=t[0],t=t[1],e=e.toLowerCase();e in this.commands?"function"==typeof(e=this.commands[e])?e(t):this.outputMessage('Command not found. Type "help" for a list of available commands.'):this.outputCommandNotFound()}},{key:"clear",value:function(){this.output.innerHTML=""}},{key:"help",value:function(){var t=Object.keys(this.commands).join(", ");this.outputMessage("Available commands: ".concat(t))}},{key:"fetchQuote",value:function(){var e=this;fetch("https://api.quotable.io/random").then(function(t){return t.json()}).then(function(t){return e.outputMessage(t.content)}).catch(function(){return e.outputMessage("Failed to fetch quote. Please try again later.")})}},{key:"double",value:function(t){t=parseFloat(t);isNaN(t)?this.outputMessage("Invalid argument for double command."):this.outputMessage("".concat(t," * 2 = ").concat(2*t))}},{key:"outputMessage",value:function(t){this.output.innerHTML+="<div>you: ".concat(t,"</div>")}},{key:"outputCommandNotFound",value:function(){this.outputMessage('Command not found. Type "help" for a list of available commands.')}}]),t}(),terminal=new Terminal;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
